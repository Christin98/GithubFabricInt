table 'IM AOV Today Line'
	lineageTag: e3f57e28-4627-49ca-ad89-bcdf32a46c98

	column COUNT_id
		dataType: double
		sourceProviderType: double
		lineageTag: 7b7e41f1-da7e-4ca7-8969-cd5a7ccdf706
		summarizeBy: sum
		sourceColumn: COUNT_id

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column created_at_ist
		dataType: dateTime
		formatString: General Date
		sourceProviderType: datetime2
		lineageTag: a9588ad7-fa1f-4598-9ef5-5b91610c52a1
		summarizeBy: none
		sourceColumn: created_at_ist

		annotation SummarizationSetBy = Automatic

	column Time_period
		dataType: string
		sourceProviderType: nvarchar(max)
		lineageTag: 42128064-e769-4e3a-86fd-fc9db5dce0ad
		summarizeBy: none
		sourceColumn: Time_period

		annotation SummarizationSetBy = Automatic

	partition 'IM AOV Today Line' = m
		mode: directQuery
		queryGroup: IM\IM-Today\IM-Sales\IM_AOV
		source = ```
				let
				    // Get current date and time in UTC
				    TodayDateTimeZone = DateTimeZone.UtcNow(),
				
				    // Convert UTC time to IST
				    TodaysDateTime = TodayDateTimeZone + #duration(0, 5, 30, 0),
				
				    TodaysTime = Time.ToText(DateTime.Time(TodaysDateTime), "HH:mm:ss"),
				
				    StartOfToday = DateTime.FromText(Date.ToText(DateTime.Date(TodaysDateTime)) & " 00:00:00"),
				
				    // // // Format the start and end dates to yyyy-MM-dd HH:mm:ss format
				    StartOfTodayFormatted = DateTime.ToText(StartOfToday, "yyyy-MM-dd HH:mm:ss"),
				    CurrentDateTime = DateTime.FromText(Date.ToText(DateTime.Date(TodaysDateTime)) & " " & TodaysTime),
				    CurrentDateTimeFormatted = DateTime.ToText(CurrentDateTime, "yyyy-MM-dd HH:mm:ss"),
				
				       // Get Last 7 days's time
				    LastWeekDateTime = TodaysDateTime - #duration(7, 0, 0, 0),
				    LastWeeksTime = Time.ToText(DateTime.Time(LastWeekDateTime), "HH:mm:ss"),
				    StartOfLastWeek = DateTime.FromText(Date.ToText(DateTime.Date(LastWeekDateTime)) & " 00:00:00"),
				    StartOfLastWeekFormatted = DateTime.ToText(StartOfLastWeek, "yyyy-MM-dd HH:mm:ss"),
				    LastWeekCurrentDateTime = DateTime.FromText(Date.ToText(DateTime.Date(LastWeekDateTime)) & " " & LastWeeksTime),
				    LastWeekCurrentDateTimeFormatted = DateTime.ToText(LastWeekCurrentDateTime, "yyyy-MM-dd HH:mm:ss"),
				
				    // // Reference the Table Name parameter dynamically
				    TableName = IMTableName,
				
				    // // Format the query with dynamic start and end times for yesterday in IST
				   
				    
				    Query = "let today = " & TableName & " 
				    | where created_at_ist >= datetime('" & StartOfTodayFormatted & "')
				    | where  created_at_ist <= datetime('" & CurrentDateTimeFormatted & "')
				    | where updated_at_ist <= datetime('"& CurrentDateTimeFormatted &"') 
				    | extend counter = case(order_level != 'ORDER_LEVEL_LEAF' or isempty(order_level), 1, 0) 
				    | where dp_order_type == 'INSTAMART' and (status == 'DELIVERY_DELIVERED' or status == 'COMPLETED') 
				    | summarize COUNT_id =  round(sum(gmv)/sum(counter),2) by bin(created_at_ist, 1h)
				    | extend Time_period='Today'
				    | project COUNT_id, created_at_ist, Time_period;
				    let last_week =  " & TableName & " 
				    | where created_at_ist >= datetime('"& StartOfLastWeekFormatted &"') 
				    | where created_at_ist <= datetime('"& LastWeekCurrentDateTimeFormatted &"') 
				    | where updated_at_ist <= datetime('"& LastWeekCurrentDateTimeFormatted &"') 
				    | extend counter = case(order_level != 'ORDER_LEVEL_LEAF' or isempty(order_level), 1, 0) 
				    | where dp_order_type == 'INSTAMART' and (status == 'DELIVERY_DELIVERED' or status == 'COMPLETED') 
				    | extend created_at_ist = datetime_add('hour', 168, created_at_ist)
				    | summarize COUNT_id =  round(sum((gmv))/sum(counter),2) by bin(created_at_ist, 1h)
				    | extend Time_period='SDLW'
				    | project COUNT_id, created_at_ist, Time_period;
				    today
				    | union last_week",
				
				    // // Get data from Azure Data Explorer with the dynamic query
				    Source = AzureDataExplorer.Contents(Cluster,DB, Query, [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null]),
				    #"Changed Type" = Table.TransformColumnTypes(Source,{{"created_at_ist", type datetime}})
				in
				#"Changed Type"
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

