table 'Food SDC% line Last 4 Weeks'
	lineageTag: b5be3c74-ea04-47cc-ad97-55d7b4d40f55

	column sdc
		dataType: double
		lineageTag: 5c99f511-6755-459c-81d4-ca4e9d4f9c32
		summarizeBy: sum
		sourceColumn: sdc

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column created_on_ist
		dataType: dateTime
		formatString: General Date
		lineageTag: 35b28958-bc02-4654-9afc-600b781e8afb
		summarizeBy: none
		sourceColumn: created_on_ist

		variation Variation
			isDefault
			relationship: d2f6b61a-8dfa-4b01-9aad-59c1a0ccadfd
			defaultHierarchy: LocalDateTable_a0dfab17-6b15-44be-9d32-d549d998564a.'Date Hierarchy'

		annotation SummarizationSetBy = Automatic

	column period
		dataType: string
		lineageTag: 5e8e8236-e773-403d-98ae-a6d456afe81b
		summarizeBy: none
		sourceColumn: period

		annotation SummarizationSetBy = Automatic

	partition 'Food SDC% line Last 4 Weeks' = m
		mode: import
		queryGroup: 'Food\Food- Last 4 weeks\Food-Cancellation\Food-SDC'
		source = ```
				let
				// Get current date and time in UTC
				TodayDateTimeZone = DateTimeZone.UtcNow(),
				
				// Convert UTC time to IST (Indian Standard Time, UTC +5:30)
				TodaysDateTime = TodayDateTimeZone + #duration(0, 5, 30, 0),
				
				// Get today's date in IST (removes the time part)
				
				TodaysTime = Time.ToText(DateTime.Time(TodaysDateTime), "HH:mm:ss"),
				
				TodayDate = DateTime.Date(TodaysDateTime),
				
				// Get the date 28 days ago in IST
				Last28Days = TodayDate - #duration(28, 0, 0, 0),
				
				// Last 28 days current week to 12:00 AM IST
				StartOfLast28Days = DateTime.FromText(Date.ToText(Last28Days) & " 00:00:00"),
				StartOfLast28DaysFormatted = DateTime.ToText(StartOfLast28Days, "yyyy-MM-dd HH:mm:ss"),
				CurrentDate = DateTime.FromText(Date.ToText(DateTime.Date(TodaysDateTime)) &  " 00:00:00"),
				EndofCurrentDateFormatted = DateTime.ToText(CurrentDate, "yyyy-MM-dd HH:mm:ss"),
				
				// Last 28 days previous week to 12:00 AM IST
				Last4WeekStartDateTime = StartOfLast28Days - #duration(28, 0, 0, 0),
				StartOfLast4Week = DateTime.FromText(Date.ToText(DateTime.Date(Last4WeekStartDateTime)) & " 00:00:00"),
				StartOfLast4WeekFormatted = DateTime.ToText(StartOfLast4Week, "yyyy-MM-dd HH:mm:ss"),
				EndofLast4WeekFormatted = StartOfLast28DaysFormatted,
				
				    // Reference the Table Name parameter dynamically
				    TableName = FoodTableName,
				
				//Query for same timeframe
				 Query ="let currentperiod = " & TableName & " 
				| where created_on_ist >= datetime('"& StartOfLast28DaysFormatted &"') 
				| where created_on_ist < datetime('"& EndofCurrentDateFormatted &"') 
				| extend cancelled = iff(order_status == 'cancelled' and order_type != 'SUBSCRIPTION' and canceled_reason == '1', 1.0, 0.0) 
				| extend all_orders = iff(((order_status == 'completed' or order_status == 'cancelled' or order_status == 'processing') and order_type != 'SUBSCRIPTION'), 1.0, 0.0) 
				| summarize sdc = round(sum(cancelled)/sum(all_orders)*100,2) by bin(created_on_ist, 1d) 
				| extend period='Daily Trend'
				| project sdc, created_on_ist, period;
				let previousperiod  = " & TableName & " 
				| where created_on_ist >= datetime('"& StartOfLast4WeekFormatted &"') 
				| where created_on_ist < datetime('"& EndofLast4WeekFormatted &"') 
				| extend cancelled = iff(order_status == 'cancelled' and order_type != 'SUBSCRIPTION' and canceled_reason == '1', 1.0, 0.0) 
				| extend all_orders = iff(((order_status == 'completed' or order_status == 'cancelled' or order_status == 'processing') and order_type != 'SUBSCRIPTION'), 1.0, 0.0) 
				| extend created_on_ist = datetime_add('hour', 672, created_on_ist)
				| summarize sdc = round(sum(cancelled)/sum(all_orders)*100,2) by bin(created_on_ist, 1d) 
				| extend period='4 Weeks Ago'
				| project sdc, created_on_ist, period;
				currentperiod
				| union previousperiod",
				
				// Get data from Azure Data Explorer with the dynamic query
				    Source = AzureDataExplorer.Contents(Cluster,DB, Query, [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null]),
				    #"Changed Type" = Table.TransformColumnTypes(Source,{{"created_on_ist", type datetime}})
				in
				    #"Changed Type"
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

