table 'IM WOW% AOV-Yesterday'
	lineageTag: c5df8670-ce6d-46e2-a126-f97b294d078b

	column print_0
		dataType: double
		lineageTag: 28f99931-071c-48de-8f61-11ca86f1fbac
		summarizeBy: sum
		sourceColumn: print_0

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	partition 'IM WOW% AOV-Yesterday' = m
		mode: import
		queryGroup: IM\IM-Yesterday\IM-Sales\IM_AOV
		source = ```
				let
				    // Get current date and time in UTC
				    TodayDateTimeZone = DateTimeZone.UtcNow(),
				
				    // Convert UTC time to IST
				    TodaysDateTime = TodayDateTimeZone + #duration(0, 5, 30, 0),
				
				    // Get yesterday's date (in IST)
				    YesterdayDateTime = TodaysDateTime - #duration(1, 0, 0, 0),
				    // Set Start of Yesterday to 12:00 AM IST
				    StartOfYesterday = DateTime.FromText(Date.ToText(DateTime.Date(YesterdayDateTime)) & " 00:00:00"),
				    // Set End of Today to 00:00 AM IST
				    EndOfYesterday = DateTime.FromText(Date.ToText(DateTime.Date(TodaysDateTime)) & " 00:00:00"),
				    // Format the start and end dates to yyyy-MM-dd HH:mm:ss format
				    StartOfYesterdayFormatted = DateTime.ToText(StartOfYesterday, "yyyy-MM-dd HH:mm:ss"),
				    EndOfYesterdayFormatted = DateTime.ToText(EndOfYesterday, "yyyy-MM-dd HH:mm:ss"),
				
				    // Get Last 7 days's time
				    LastWeekDateTime = YesterdayDateTime - #duration(7, 0, 0, 0),
				    StartOfLastWeek = DateTime.FromText(Date.ToText(DateTime.Date(LastWeekDateTime)) & " 00:00:00"),
				    StartOfLastWeekFormatted = DateTime.ToText(StartOfLastWeek, "yyyy-MM-dd HH:mm:ss"),
				    NextDayLastWeekDateTime = YesterdayDateTime - #duration(6, 0, 0, 0),
				    LastWeekCurrentDateTime = DateTime.FromText(Date.ToText(DateTime.Date(NextDayLastWeekDateTime)) & " 00:00:00"),
				    LastWeekCurrentDateTimeFormatted = DateTime.ToText(LastWeekCurrentDateTime, "yyyy-MM-dd HH:mm:ss"),
				
				    // Reference the Table Name parameter dynamically
				    TableName = IMTableName,
				
				    // Format the query with dynamic start and end times
				
				    Query = "let today = " & TableName & " 
				  | where created_at_ist >= datetime('"& StartOfYesterdayFormatted &"') 
				  | where created_at_ist < datetime('"& EndOfYesterdayFormatted &"') 
				  | extend counter = case(order_level != 'ORDER_LEVEL_LEAF' or isempty(order_level), 1, 0) 
				  | where dp_order_type == 'INSTAMART' and (status == 'DELIVERY_DELIVERED' or status == 'COMPLETED') 
				  | summarize GroupAvgGmv = avg(gmv), GroupCount = count() by city, region, zone, store_id, delivery_type
				  | summarize g = sum(GroupAvgGmv *GroupCount ), g1 = sum(GroupCount)
				  | project  g/g1 ;
				  let last_week = " & TableName & " 
				  | where created_at_ist >= datetime('"& StartOfLastWeekFormatted &"') 
				  | where created_at_ist < datetime('"& LastWeekCurrentDateTimeFormatted &"')
				  | extend counter = case(order_level != 'ORDER_LEVEL_LEAF' or isempty(order_level), 1, 0) 
				  | where dp_order_type == 'INSTAMART' and (status == 'DELIVERY_DELIVERED' or status == 'COMPLETED')
				  | summarize GroupAvgGmv = avg(gmv), GroupCount = count() by city, region, zone, store_id, delivery_type
				  | summarize g = sum(GroupAvgGmv *GroupCount ), g1 = sum(GroupCount)
				  | project  g/g1 ;
				  // Run below to check green
				  let todayCount = toscalar(today);
				  let lastweekcount = toscalar(last_week);
				  let percentage = toscalar(toreal((((toreal(todayCount) - toreal(lastweekcount)) / toreal(lastweekcount)) * 100)));
				  print(round(percentage, 2))",
				
				    // Get data from Azure Data Explorer with the dynamic query
				    Source = AzureDataExplorer.Contents(Cluster, DB, Query, [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null])
				in
				    Source
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

