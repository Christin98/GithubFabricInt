table 'Food CDC% Line Last 4 Weeks'
	lineageTag: e211b3f2-a0d5-443c-a7c4-5c2c87a2478a

	column cdc
		dataType: double
		lineageTag: a1f61d27-651e-42e0-bdd1-1e930fda0710
		summarizeBy: sum
		sourceColumn: cdc

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column created_on_ist
		dataType: dateTime
		formatString: General Date
		lineageTag: 5472ecf2-d767-4040-b52f-f8b15f7cf304
		summarizeBy: none
		sourceColumn: created_on_ist

		variation Variation
			isDefault
			relationship: 3841432e-60da-4124-b717-595e75a686e6
			defaultHierarchy: LocalDateTable_4582cb22-6e32-457e-b23c-20c6bfe6362b.'Date Hierarchy'

		annotation SummarizationSetBy = Automatic

	column period
		dataType: string
		lineageTag: 2b1e918c-f2ae-4dad-af9a-f687e161c6f6
		summarizeBy: none
		sourceColumn: period

		annotation SummarizationSetBy = Automatic

	partition 'Food CDC% Line Last 4 Weeks' = m
		mode: import
		queryGroup: 'Food\Food- Last 4 weeks\Food-Cancellation\Food-CDC'
		source = ```
				let   
				    // Get current date and time in UTC
				TodayDateTimeZone = DateTimeZone.UtcNow(),
				
				// Convert UTC time to IST (Indian Standard Time, UTC +5:30)
				TodaysDateTime = TodayDateTimeZone + #duration(0, 5, 30, 0),
				
				// Get today's date in IST (removes the time part)
				
				TodaysTime = Time.ToText(DateTime.Time(TodaysDateTime), "HH:mm:ss"),
				
				TodayDate = DateTime.Date(TodaysDateTime),
				
				// Get the date 28 days ago in IST
				Last28Days = TodayDate - #duration(28, 0, 0, 0),
				
				// Last 28 days current week to 12:00 AM IST
				StartOfLast28Days = DateTime.FromText(Date.ToText(Last28Days) & " 00:00:00"),
				StartOfLast28DaysFormatted = DateTime.ToText(StartOfLast28Days, "yyyy-MM-dd HH:mm:ss"),
				CurrentDate = DateTime.FromText(Date.ToText(DateTime.Date(TodaysDateTime)) &  " 00:00:00"),
				EndofCurrentDateFormatted = DateTime.ToText(CurrentDate, "yyyy-MM-dd HH:mm:ss"),
				
				// Last 28 days previous week to 12:00 AM IST
				Last4WeekStartDateTime = StartOfLast28Days - #duration(28, 0, 0, 0),
				StartOfLast4Week = DateTime.FromText(Date.ToText(DateTime.Date(Last4WeekStartDateTime)) & " 00:00:00"),
				StartOfLast4WeekFormatted = DateTime.ToText(StartOfLast4Week, "yyyy-MM-dd HH:mm:ss"),
				EndofLast4WeekFormatted = StartOfLast28DaysFormatted,
				
				    TableName = FoodTableName,
				
				    Query = "let currentperiod = " & TableName & " 
				| where created_on_ist >= datetime('"& StartOfLast28DaysFormatted &"') 
				| where created_on_ist < datetime('"& EndofCurrentDateFormatted &"') 
				| extend cancelled = iff(order_status == 'cancelled' and order_type != 'SUBSCRIPTION' and canceled_reason == '3', 1.0, 0.0) 
				| extend all_orders = iff(((order_status == 'completed' or order_status == 'cancelled' or order_status == 'processing') and order_type != 'SUBSCRIPTION'), 1.0, 0.0) 
				| summarize cdc = round(sum(cancelled)/sum(all_orders)*100, 2) by bin(created_on_ist, 1d)
				| extend period='Daily Trend'
				| project cdc, created_on_ist, period;
				let previousperiod  = " & TableName & " 
				| where created_on_ist >= datetime('"& StartOfLast4WeekFormatted &"') 
				| where created_on_ist < datetime('"& EndofLast4WeekFormatted &"') 
				| extend cancelled = iff(order_status == 'cancelled' and order_type != 'SUBSCRIPTION' and canceled_reason == '3', 1.0, 0.0) 
				| extend all_orders = iff(((order_status == 'completed' or order_status == 'cancelled' or order_status == 'processing') and order_type != 'SUBSCRIPTION'), 1.0, 0.0)
				| extend created_on_ist = datetime_add('hour', 672, created_on_ist)
				| summarize cdc = round(sum(cancelled)/sum(all_orders)*100, 2) by bin(created_on_ist, 1d)
				| extend period='4 Weeks Ago'
				| project cdc, created_on_ist, period;
				currentperiod
				| union previousperiod",
				 
				    // Get data from Azure Data Explorer with the dynamic query
				    Source = AzureDataExplorer.Contents(Cluster, DB,Query, [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null]),
				    #"Changed Type" = Table.TransformColumnTypes(Source,{{"created_on_ist", type datetime}})
				in
				    #"Changed Type"
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Exception

