table 'IM Orders Count Yesterday Line'
	lineageTag: bb3cfc92-8906-4954-add2-f023565f816e

	column COUNT_id
		dataType: int64
		formatString: 0
		sourceProviderType: bigint
		lineageTag: 8a5304cc-2b99-450c-96fb-d0734a5ffbe1
		summarizeBy: sum
		sourceColumn: COUNT_id

		annotation SummarizationSetBy = Automatic

	column created_at_ist
		dataType: dateTime
		formatString: General Date
		sourceProviderType: datetime2
		lineageTag: ad18da8e-b923-4b41-8d2d-f9b750c6aba1
		summarizeBy: none
		sourceColumn: created_at_ist

		variation Variation
			isDefault
			relationship: 7b86939b-e2e5-467c-b457-70c722643241
			defaultHierarchy: LocalDateTable_2d06d0b6-8746-41a6-8f79-b57d568bed86.'Date Hierarchy'

		annotation SummarizationSetBy = Automatic

	column Time_Period
		dataType: string
		sourceProviderType: nvarchar(max)
		lineageTag: 8b39bc77-39e9-4eae-973c-d6185520e439
		summarizeBy: none
		sourceColumn: Time_Period

		annotation SummarizationSetBy = Automatic

	partition 'IM Orders Count Yesterday Line' = m
		mode: import
		queryGroup: IM\IM-Yesterday\IM-Sales\IM-Orders
		source = ```
				let
				    // Get current date and time in UTC
				    TodayDateTimeZone = DateTimeZone.UtcNow(),
				
				    // Convert UTC time to IST
				    TodaysDateTime = TodayDateTimeZone + #duration(0, 5, 30, 0),
				
				    // Get yesterday's date (in IST)
				    YesterdayDateTime = TodaysDateTime - #duration(1, 0, 0, 0),
				    // Set Start of Yesterday to 12:00 AM IST
				    StartOfYesterday = DateTime.FromText(Date.ToText(DateTime.Date(YesterdayDateTime)) & " 00:00:00"),
				    // Set End of Today to 00:00 AM IST
				    EndOfYesterday = DateTime.FromText(Date.ToText(DateTime.Date(TodaysDateTime)) & " 00:00:00"),
				    // Format the start and end dates to yyyy-MM-dd HH:mm:ss format
				    StartOfYesterdayFormatted = DateTime.ToText(StartOfYesterday, "yyyy-MM-dd HH:mm:ss"),
				    EndOfYesterdayFormatted = DateTime.ToText(EndOfYesterday, "yyyy-MM-dd HH:mm:ss"),
				
				    // Get Last 7 days's time
				    LastWeekDateTime = YesterdayDateTime - #duration(7, 0, 0, 0),
				    StartOfLastWeek = DateTime.FromText(Date.ToText(DateTime.Date(LastWeekDateTime)) & " 00:00:00"),
				    StartOfLastWeekFormatted = DateTime.ToText(StartOfLastWeek, "yyyy-MM-dd HH:mm:ss"),
				    NextDayLastWeekDateTime = YesterdayDateTime - #duration(6, 0, 0, 0),
				    LastWeekCurrentDateTime = DateTime.FromText(Date.ToText(DateTime.Date(NextDayLastWeekDateTime)) & " 00:00:00"),
				    LastWeekCurrentDateTimeFormatted = DateTime.ToText(LastWeekCurrentDateTime, "yyyy-MM-dd HH:mm:ss"),
				
				    // Reference the Table Name parameter dynamically
				    TableName = IMTableName,
				
				    // Format the query with dynamic start and end times
				
				   Query = "let today = " & TableName & "
				    | where created_at_ist >= datetime('"& StartOfYesterdayFormatted &"') 
				    | where created_at_ist < datetime('"& EndOfYesterdayFormatted &"') 
				    | where dp_order_type == 'INSTAMART' and (status == 'DELIVERY_DELIVERED' or status == 'COMPLETED') and (order_level != 'ORDER_LEVEL_LEAF' or isempty(order_level)) 
				    | summarize COUNT_id = count() by bin(created_at_ist, 1h)
				    | extend Time_Period='Yesterday'
				    | project COUNT_id, created_at_ist, Time_Period;
				    let last_week = " & TableName & " 
				    | where created_at_ist >= datetime('"& StartOfLastWeekFormatted &"') 
				    | where created_at_ist < datetime('"& LastWeekCurrentDateTimeFormatted &"') 
				    | where dp_order_type == 'INSTAMART' and (status == 'DELIVERY_DELIVERED' or status == 'COMPLETED') and (order_level != 'ORDER_LEVEL_LEAF' or isempty(order_level)) 
				    | extend created_at_ist = datetime_add('hour', 168, created_at_ist)
				    | summarize COUNT_id = count() by bin(created_at_ist, 1h)
				    | extend Time_Period='SDLW'
				    | project COUNT_id, created_at_ist, Time_Period;
				    today
				    | union last_week",
				
				    // Get data from Azure Data Explorer with the dynamic query
				
				    Source = AzureDataExplorer.Contents(Cluster,DB, Query, [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null]),
				    #"Changed Type" = Table.TransformColumnTypes(Source,{{"created_at_ist", type datetime}})
				in
				    #"Changed Type"
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

