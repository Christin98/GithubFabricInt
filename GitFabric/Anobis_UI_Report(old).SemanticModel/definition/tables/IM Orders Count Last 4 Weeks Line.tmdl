table 'IM Orders Count Last 4 Weeks Line'
	lineageTag: 6bd5cb37-e632-4f59-97be-e2a5f5dd5764

	column COUNT_id
		dataType: int64
		formatString: 0
		lineageTag: af0180d4-1a66-45ef-9ffd-8378b55e2872
		summarizeBy: sum
		sourceColumn: COUNT_id

		annotation SummarizationSetBy = Automatic

	column created_at_ist
		dataType: dateTime
		formatString: General Date
		lineageTag: ea27011f-baba-44ea-b0a6-bca11c6aed93
		summarizeBy: none
		sourceColumn: created_at_ist

		variation Variation
			isDefault
			relationship: ca5e9710-c392-4ae2-86aa-de07d7980268
			defaultHierarchy: LocalDateTable_b75b5d4c-e54c-4317-abff-cb7ff93de3e9.'Date Hierarchy'

		annotation SummarizationSetBy = Automatic

	column time_period
		dataType: string
		lineageTag: e3788fb2-5b7c-4529-9b8b-6384565f6f1e
		summarizeBy: none
		sourceColumn: time_period

		annotation SummarizationSetBy = Automatic

	partition 'IM Orders Count Last 4 Weeks Line' = m
		mode: import
		queryGroup: 'IM\IM-Last 4 Weeks\IM-Sales\IM-Orders'
		source = ```
				let
				    // Get current date and time in UTC
				    TodayDateTimeZone = DateTimeZone.UtcNow(),
				
				    // Convert UTC time to IST (Indian Standard Time, UTC +5:30)
				    TodaysDateTime = TodayDateTimeZone + #duration(0, 5, 30, 0),
				
				    // Get today's date in IST (removes the time part)
				
				    TodaysTime = Time.ToText(DateTime.Time(TodaysDateTime), "HH:mm:ss"),
				
				    TodayDate = DateTime.Date(TodaysDateTime),
				
				    // Get the date 28 days ago in IST
				    Last28Days = TodayDate - #duration(28, 0, 0, 0),
				
				    // Last 28 days current week to 12:00 AM IST
				    StartOfLast28Days = DateTime.FromText(Date.ToText(Last28Days) & " 00:00:00"),
				    StartOfLast28DaysFormatted = DateTime.ToText(StartOfLast28Days, "yyyy-MM-dd HH:mm:ss"),
				    CurrentDate = DateTime.FromText(Date.ToText(DateTime.Date(TodaysDateTime)) &  " 00:00:00"),
				    EndofCurrentDateFormatted = DateTime.ToText(CurrentDate, "yyyy-MM-dd HH:mm:ss"),
				
				    // Last 28 days previous week to 12:00 AM IST
				    Last4WeekStartDateTime = StartOfLast28Days - #duration(28, 0, 0, 0),
				    StartOfLast4Week = DateTime.FromText(Date.ToText(DateTime.Date(Last4WeekStartDateTime)) & " 00:00:00"),
				    StartOfLast4WeekFormatted = DateTime.ToText(StartOfLast4Week, "yyyy-MM-dd HH:mm:ss"),
				    EndofLast4WeekFormatted = StartOfLast28DaysFormatted,
				    // Reference the Table Name parameter dynamically
				    TableName = IMTableName,
				
				    // Format the query with dynamic start and end times
				
				   Query = "let current_week = " & TableName & " 
				| where created_at_ist >= datetime('" & StartOfLast28DaysFormatted & "')
				| where created_at_ist < datetime('" & EndofCurrentDateFormatted & "')
				| where dp_order_type == 'INSTAMART' and (status == 'DELIVERY_DELIVERED' or status == 'COMPLETED') 
				and (order_level != 'ORDER_LEVEL_LEAF' or isempty(order_level)) 
				| summarize COUNT_id = count() by bin(created_at_ist, 1d)
				| extend time_period='Daily Trend'
				| project COUNT_id, created_at_ist, time_period;
				let last_week = " & TableName & " 
				| where created_at_ist >= datetime('" & StartOfLast4WeekFormatted & "')
				| where created_at_ist < datetime('" & EndofLast4WeekFormatted & "')
				| where dp_order_type == 'INSTAMART' and (status == 'DELIVERY_DELIVERED' or status == 'COMPLETED') 
				    and (order_level != 'ORDER_LEVEL_LEAF' or isempty(order_level))
				| extend created_at_ist = datetime_add('hour', 672, created_at_ist) 
				| summarize COUNT_id = count() by bin(created_at_ist, 1d)
				| extend time_period='4 Weeks Ago'
				| project COUNT_id, created_at_ist, time_period;
				current_week
				| union last_week",
				    // Get data from Azure Data Explorer with the dynamic query
				    Source = AzureDataExplorer.Contents(Cluster,DB, Query, [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null]),
				    #"Changed Type" = Table.TransformColumnTypes(Source,{{"created_at_ist", type datetime}})
				in
				    #"Changed Type"
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

