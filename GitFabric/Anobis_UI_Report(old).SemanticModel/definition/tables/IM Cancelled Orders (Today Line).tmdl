table 'IM Cancelled Orders (Today Line)'
	lineageTag: 7ae2efae-4726-4c4f-b400-1be8fc410238

	column COUNT_id
		dataType: int64
		formatString: 0
		sourceProviderType: bigint
		lineageTag: b449c1c9-244b-4c6d-80ee-2f92e64aaeec
		summarizeBy: sum
		sourceColumn: COUNT_id

		annotation SummarizationSetBy = Automatic

	column created_at_ist
		dataType: dateTime
		formatString: General Date
		sourceProviderType: datetime2
		lineageTag: f5b57537-69dd-4b8f-80fa-f91a6687be26
		summarizeBy: none
		sourceColumn: created_at_ist

		annotation SummarizationSetBy = Automatic

	column Time_period
		dataType: string
		sourceProviderType: nvarchar(max)
		lineageTag: a17b661f-02ce-451f-9660-ad3d40d32679
		summarizeBy: none
		sourceColumn: Time_period

		annotation SummarizationSetBy = Automatic

	partition 'IM Cancelled Orders (Today Line)' = m
		mode: directQuery
		queryGroup: 'IM\IM-Today\IM-Cancellation\IM-Cancelled Orders'
		source = ```
				let
				    // Get current date and time in UTC
				    TodayDateTimeZone = DateTimeZone.UtcNow(),
				
				    // Convert UTC time to IST
				    TodaysDateTime = TodayDateTimeZone + #duration(0, 5, 30, 0),
				
				    TodaysTime = Time.ToText(DateTime.Time(TodaysDateTime), "HH:mm:ss"),
				
				    StartOfToday = DateTime.FromText(Date.ToText(DateTime.Date(TodaysDateTime)) & " 00:00:00"),
				
				    // // // Format the start and end dates to yyyy-MM-dd HH:mm:ss format
				    StartOfTodayFormatted = DateTime.ToText(StartOfToday, "yyyy-MM-dd HH:mm:ss"),
				    CurrentDateTime = DateTime.FromText(Date.ToText(DateTime.Date(TodaysDateTime)) & " " & TodaysTime),
				    CurrentDateTimeFormatted = DateTime.ToText(CurrentDateTime, "yyyy-MM-dd HH:mm:ss"),
				
				    // Get Last 7 days's time
				    LastWeekDateTime = TodaysDateTime - #duration(7, 0, 0, 0),
				    LastWeeksTime = Time.ToText(DateTime.Time(LastWeekDateTime), "HH:mm:ss"),
				    StartOfLastWeek = DateTime.FromText(Date.ToText(DateTime.Date(LastWeekDateTime)) & " 00:00:00"),
				    StartOfLastWeekFormatted = DateTime.ToText(StartOfLastWeek, "yyyy-MM-dd HH:mm:ss"),
				    LastWeekCurrentDateTime = DateTime.FromText(Date.ToText(DateTime.Date(LastWeekDateTime)) & " " & LastWeeksTime),
				    LastWeekCurrentDateTimeFormatted = DateTime.ToText(LastWeekCurrentDateTime, "yyyy-MM-dd HH:mm:ss"),
				
				    // Reference the Table Name parameter dynamically
				    TableName = IMTableName,
				
				    // Format the query with dynamic start and end times
				    
				    Query = "let today = " & TableName & "
				| where created_at_ist >= datetime('"& StartOfTodayFormatted &"') 
				| where  created_at_ist <= datetime('"& CurrentDateTimeFormatted &"')
				| where updated_at_ist <= datetime('"& CurrentDateTimeFormatted &"')  
				| where dp_order_type == 'INSTAMART' and status == 'CANCELLED' 
				and (order_level != 'ORDER_LEVEL_LEAF' or isempty(order_level)) 
				| summarize COUNT_id = count() by bin(created_at_ist, 1h)
				| extend Time_period='Today'
				| project COUNT_id, created_at_ist, Time_period;
				let last_week = " & TableName & "
				| where created_at_ist >= datetime('"& StartOfLastWeekFormatted &"') 
				| where created_at_ist <= datetime('" & LastWeekCurrentDateTimeFormatted &" ') 
				| where updated_at_ist <= datetime('" & LastWeekCurrentDateTimeFormatted &" ') 
				| where dp_order_type == 'INSTAMART' and status == 'CANCELLED' 
				and (order_level != 'ORDER_LEVEL_LEAF' or isempty(order_level)) 
				| extend created_at_ist = datetime_add('hour', 168, created_at_ist)
				| summarize COUNT_id = count() by bin(created_at_ist, 1h)
				| extend Time_period='SDLW'
				| project COUNT_id, created_at_ist, Time_period;
				today
				| union last_week",
				
				    // Get data from Azure Data Explorer with the dynamic query
				    Source = AzureDataExplorer.Contents(Cluster, DB, Query, [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null]),
				    #"Changed Type" = Table.TransformColumnTypes(Source,{{"created_at_ist", type datetime}})
				in
				    #"Changed Type"
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

