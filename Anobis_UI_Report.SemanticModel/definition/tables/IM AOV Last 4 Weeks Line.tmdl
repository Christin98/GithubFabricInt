table 'IM AOV Last 4 Weeks Line'
	lineageTag: 5fd774aa-93a5-4890-bcdc-c712002f8597

	column COUNT_id
		dataType: double
		lineageTag: 664f1a41-aac8-4519-8ffe-639bc705c69a
		summarizeBy: sum
		sourceColumn: COUNT_id

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column created_at_ist
		dataType: dateTime
		formatString: General Date
		lineageTag: 6f737026-4eaf-48e4-ba01-decb56a97dab
		summarizeBy: none
		sourceColumn: created_at_ist

		variation Variation
			isDefault
			relationship: 1471f746-1366-4e16-a4ce-466342a46780
			defaultHierarchy: LocalDateTable_cd05c01b-9bd5-4f58-a61e-dd08682992f6.'Date Hierarchy'

		annotation SummarizationSetBy = Automatic

	column time_period
		dataType: string
		lineageTag: fd948074-dd78-4272-ba57-b126cc9fc76d
		summarizeBy: none
		sourceColumn: time_period

		annotation SummarizationSetBy = Automatic

	partition 'IM AOV Last 4 Weeks Line' = m
		mode: import
		queryGroup: 'IM\IM-Last 4 Weeks\IM-Sales\IM_AOV'
		source = ```
				let
				    // Get current date and time in UTC
				    TodayDateTimeZone = DateTimeZone.UtcNow(),
				
				    // Convert UTC time to IST (Indian Standard Time, UTC +5:30)
				    TodaysDateTime = TodayDateTimeZone + #duration(0, 5, 30, 0),
				
				    // Get today's date in IST (removes the time part)
				
				    TodaysTime = Time.ToText(DateTime.Time(TodaysDateTime), "HH:mm:ss"),
				
				    TodayDate = DateTime.Date(TodaysDateTime),
				
				    // Get the date 28 days ago in IST
				    Last28Days = TodayDate - #duration(28, 0, 0, 0),
				
				    // Last 28 days current week to 12:00 AM IST
				    StartOfLast28Days = DateTime.FromText(Date.ToText(Last28Days) & " 00:00:00"),
				    StartOfLast28DaysFormatted = DateTime.ToText(StartOfLast28Days, "yyyy-MM-dd HH:mm:ss"),
				    CurrentDate = DateTime.FromText(Date.ToText(DateTime.Date(TodaysDateTime)) &  " 00:00:00"),
				    EndofCurrentDateFormatted = DateTime.ToText(CurrentDate, "yyyy-MM-dd HH:mm:ss"),
				
				    // Last 28 days previous week to 12:00 AM IST
				    Last4WeekStartDateTime = StartOfLast28Days - #duration(28, 0, 0, 0),
				    StartOfLast4Week = DateTime.FromText(Date.ToText(DateTime.Date(Last4WeekStartDateTime)) & " 00:00:00"),
				    StartOfLast4WeekFormatted = DateTime.ToText(StartOfLast4Week, "yyyy-MM-dd HH:mm:ss"),
				    EndofLast4WeekFormatted = StartOfLast28DaysFormatted,
				    // Reference the Table Name parameter dynamically
				    TableName = IMTableName,
				
				    // Format the query with dynamic start and end times
				   Query = "let current_week = " & TableName & " 
				    | where created_at_ist >= datetime('"& StartOfLast28DaysFormatted & "') 
				    | where created_at_ist < datetime('"& EndofCurrentDateFormatted &"') 
				    | extend counter = case(order_level != 'ORDER_LEVEL_LEAF' or isempty(order_level), 1, 0) 
				    | where dp_order_type == 'INSTAMART' and (status == 'DELIVERY_DELIVERED' or status == 'COMPLETED') 
				    | summarize COUNT_id = round(sum(gmv)/sum(counter), 2) by bin(created_at_ist, 1d)
				    | extend time_period='Daily Trend'
				    | project COUNT_id, created_at_ist, time_period;
				    let last_week = " & TableName & " 
				    | where created_at_ist >= datetime('"& StartOfLast4WeekFormatted & "')
				    | where created_at_ist < datetime('"& EndofLast4WeekFormatted &"') 
				    | extend counter = case(order_level != 'ORDER_LEVEL_LEAF' or isempty(order_level), 1, 0) 
				    | where dp_order_type == 'INSTAMART' and (status == 'DELIVERY_DELIVERED' or status == 'COMPLETED')
				    | extend created_at_ist = datetime_add('hour', 672, created_at_ist)
				    | summarize COUNT_id = round(sum(gmv)/sum(counter), 2) by bin(created_at_ist, 1d)
				    | extend time_period='4 Weeks Ago'
				    | project COUNT_id, created_at_ist, time_period;
				    current_week
				    | union last_week",
				    // Get data from Azure Data Explorer with the dynamic query
				    Source = AzureDataExplorer.Contents(Cluster,DB, Query, [MaxRows=null, MaxSize=null, NoTruncate=null, AdditionalSetStatements=null]),
				    #"Changed Type" = Table.TransformColumnTypes(Source,{{"created_at_ist", type datetime}})
				in
				    #"Changed Type"
				```

	annotation PBI_NavigationStepName = Navigation

	annotation PBI_ResultType = Table

